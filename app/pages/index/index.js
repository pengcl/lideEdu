"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var util_1 = require("../../utils/util");
var app = getApp();
Page({
    data: {
        userInfo: {},
        typeId: 0,
        index: 0,
        array: [],
        objectArray: [],
        news: [],
        examTime: '',
        timer: {
            d: '00',
            h: '00',
            m: '00',
            s: '00'
        },
        exams: [],
        answers: [],
        infos: []
    },
    openPdf: function (e) {
        var type = e.currentTarget.dataset.type;
        var url = app.globalData.prefix + 'getExamAnswers';
        console.log(url);
        if (type === 'exam') {
            url = app.globalData.prefix + 'getExamInfo';
        }
        if (e.currentTarget.dataset.shared === 0) {
            wx.showModal({
                title: '温馨提示',
                content: '该模块需要分享才能查看！',
                confirmText: '马上分享',
                success: function (res) {
                    if (res.confirm) {
                        wx.navigateTo({ url: '/pages/share/share' });
                        console.log('用户点击确定');
                    }
                    else if (res.cancel) {
                        console.log('用户点击取消');
                    }
                }
            });
        }
        else {
            wx.downloadFile({
                url: app.globalData.filePrefix + e.currentTarget.dataset.id,
                success: function (res) {
                    var Path = res.tempFilePath;
                    wx.openDocument({
                        filePath: Path,
                        fileType: 'pdf',
                        success: function (res) {
                            wx.request({
                                url: url,
                                method: 'POST',
                                data: { key: app.globalData.userInfo.key, id: e.currentTarget.dataset.iid },
                                success: function () {
                                }
                            });
                        }
                    });
                },
                fail: function (res) {
                }
            });
        }
    },
    toPage: function (e) {
        app.globalData.dataTabIndex = e.currentTarget.dataset.index;
        wx.switchTab({ url: '../data/list/list' });
    },
    bindPickerChange: function (e) {
        app.globalData.userInfo.typeId = this.data.objectArray[e.detail.value].id;
        this.setData({
            index: e.detail.value,
            typeId: app.globalData.userInfo.typeId
        });
        this.getExams();
        this.getAnswers();
        this.getInfos();
        this.getVedios();
    },
    getVedios: function () {
        var that = this;
        wx.request({
            url: app.globalData.prefix + 'getVideoList',
            method: 'POST',
            data: { key: app.globalData.userInfo.key, id: app.globalData.userInfo.typeId, subjectId: '' },
            success: function (res) {
                that.setData({
                    news: res.data.result.list.slice(0, 3).map(function (item) {
                        item.title = item.title;
                        item.catalog = item.subjectName;
                        item.views = item.readNum;
                        item.date = util_1.formatTime(new Date(item.createTime));
                        item.mt = '0px';
                        item.show = true;
                        return item;
                    })
                });
            }
        });
    },
    getExams: function () {
        var that = this;
        wx.request({
            method: 'POST',
            url: app.globalData.prefix + 'getExamInfoList',
            data: { key: app.globalData.userInfo.key, id: app.globalData.userInfo.typeId },
            success: function (res) {
                that.setData({
                    exams: res.data.result.list.slice(0, 3).map(function (item) {
                        item.createTime = util_1.formatTime(new Date(item.createTime));
                        return item;
                    })
                });
            }
        });
    },
    getInfos: function () {
        var that = this;
        wx.request({
            url: app.globalData.prefix + 'getExamTimeList',
            method: 'POST',
            data: { key: app.globalData.userInfo.key, id: app.globalData.userInfo.typeId },
            success: function (res) {
                that.setData({
                    infos: res.data.result.list.map(function (info, index) {
                        var times = util_1.formatTime(new Date(info.examTime)).split('.');
                        info.examTime = times[1] + '.' + times[2];
                        if (index === 0) {
                            var examTime = times[0] + '/' + times[1] + '/' + times[2] + ' ' + info.subjectList[0].startTime + ':00';
                            that.timeDown(examTime);
                            that.setData({
                                examTime: times[1] + '月' + times[2] + '日'
                            });
                        }
                        return info;
                    })
                });
            }
        });
    },
    getAnswers: function () {
        var that = this;
        wx.request({
            url: app.globalData.prefix + 'getExamAnswersList',
            method: 'POST',
            data: { key: app.globalData.userInfo.key, id: app.globalData.userInfo.typeId },
            success: function (res) {
                that.setData({
                    answers: res.data.result.list.slice(0, 3).map(function (item) {
                        item.createTime = util_1.formatTime(new Date(item.createTime));
                        return item;
                    })
                });
            }
        });
    },
    onShow: function () {
        var _this = this;
        var that = this;
        app.getKey(function (userInfo) {
            if (!userInfo) {
                app.globalData.showLoginPanel = true;
            }
            else {
                if (userInfo.purePhoneNumber) {
                    userInfo.phoneNumber = userInfo.purePhoneNumber.substring(0, 3) + '****' + userInfo.purePhoneNumber.substring(7, 11);
                }
                _this.setData({
                    userInfo: userInfo,
                    typeId: app.globalData.userInfo.typeId
                });
                wx.request({
                    url: app.globalData.prefix + 'getProjectList',
                    data: {},
                    header: {
                        'content-type': 'application/json'
                    },
                    success: function (res) {
                        var array = [];
                        var objectArray = [];
                        res.data.result.list.forEach(function (item, index) {
                            array.push(item.projectName);
                            objectArray.push({
                                id: item.id,
                                name: item.projectName
                            });
                        });
                        that.setData({
                            typeId: app.globalData.userInfo.typeId,
                            index: util_1.getIndex(objectArray, 'id', app.globalData.userInfo.typeId),
                            array: array,
                            objectArray: objectArray
                        });
                        that.getExams();
                        that.getAnswers();
                        that.getInfos();
                        that.getVedios();
                    }
                });
            }
        });
    },
    goPage: function (e) {
        wx.navigateTo({
            url: '/pages/course/item/item?id=' + e.currentTarget.dataset.id,
        });
    },
    getUserInfo: function (e) {
        app.globalData.userInfo = e.detail.userInfo;
        this.setData({
            userInfo: e.detail.userInfo,
            hasUserInfo: true
        });
    },
    timeDown: function (endDateStr) {
        var _this = this;
        var endDate = new Date(endDateStr);
        var nowDate = new Date();
        var totalSeconds = parseInt((endDate - nowDate) / 1000);
        var days = Math.floor(totalSeconds / (60 * 60 * 24));
        var modulo = totalSeconds % (60 * 60 * 24);
        var hours = Math.floor(modulo / (60 * 60));
        modulo = modulo % (60 * 60);
        var minutes = Math.floor(modulo / 60);
        var seconds = modulo % 60;
        this.setData({
            timer: {
                d: days < 10 ? '0' + days : days,
                h: hours < 10 ? '0' + hours : hours,
                m: minutes < 10 ? '0' + minutes : minutes,
                s: seconds < 10 ? '0' + seconds : seconds
            }
        });
        setTimeout(function () {
            _this.timeDown(endDateStr);
        }, 1000);
    },
    onShareAppMessage: function () {
        app.updateShare();
        return {
            title: '教育成就美好未来',
            path: '/pages/index/index'
        };
    },
    getPhoneNumber: function (e) {
        var that = this;
        var pages = getCurrentPages();
        var currentPage = pages[pages.length - 1];
        var options = currentPage.options;
        console.log(e.detail.errMsg);
        if (e.detail.errMsg === 'getPhoneNumber:ok') {
            wx.request({
                url: app.globalData.prefix + 'initMember',
                method: 'POST',
                data: {
                    encryptedData: e.detail.encryptedData,
                    iv: e.detail.iv,
                    sessionKey: app.globalData.userInfo.sessionKey,
                    openid: app.globalData.userInfo.openId,
                    referee: options.scene ? decodeURIComponent(options.scene).split('&')[0] : ''
                },
                success: function (res) {
                    if (options.scene && decodeURIComponent(options.scene).split('&')[1]) { }
                    app.globalData.showLoginPanel = false;
                    app.globalData.userInfo.key = '';
                    that.onShow();
                }
            });
        }
    }
});
//# sourceMappingURL=data:application/json;base64,